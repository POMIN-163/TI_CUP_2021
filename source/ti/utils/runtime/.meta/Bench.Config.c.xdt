%%{
/*
 * Copyright (c) 2019 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== Bench.Config.c.xdt ========
 */
%%}
%%{
    let Bench = args[0];
    let config = new Array();
%%}
/*
 *  ======== ti.utils.runtime/Bench ========
 */

#include <ti/utils/runtime/Bench.h>

#define CONFIG_Bench_COUNT `Bench.$instances.length`

% for (let i = 0; i < Bench.$instances.length; i++) {
%     let inst = Bench.$instances[i];
%     let buf = "Bench_buffer_"+i;
%     let sect = inst.section;
%     let semi = (sect == "" ? ";" : "");
%     if (!inst.proxy) {
uint32_t `buf`[`Bench.$static.numEntries`]`semi`
%         if (sect != "") {
__attribute__((section("`sect`.ti_utils_runtime:`buf`"),aligned(4)));
%         }
%     }
% }

Bench_Instance Bench_config[CONFIG_Bench_COUNT] = {
% for (let i = 0; i < Bench.$instances.length; i++) {
%     let inst = Bench.$instances[i];
    {   // `inst.$name`
%     if (inst.proxy) {
        .next = NULL,
        .buffer = NULL,
        .limit = NULL,
        .proxy = true,
%     } else {
        .next = &Bench_buffer_`i`[0],
        .buffer = &Bench_buffer_`i`[0],
        .limit = &Bench_buffer_`i`[`Bench.$static.numEntries`],
        .proxy = false,
%     }
        .label = "`inst.mark`"
    }`i+1 == Bench.$instances.length ? "" : ","`
% }
};

int Bench_count __attribute__((used)) = CONFIG_Bench_COUNT;

% for (let i = 0; i < Bench.$instances.length; i++) {
%     let inst = Bench.$instances[i];
Bench_Handle `inst.$name` = &Bench_config[`i`];
% }

Bench_State Bench_state __attribute__((used)) = {
    .numEntries = `Bench.$static.numEntries`,
    .timestampHz = `Bench.$static.timestampHz`
};
